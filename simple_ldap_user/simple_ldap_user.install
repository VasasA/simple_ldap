<?php
/**
 * @file
 * simple_ldap_user module installation.
 */

/**
 * Implements hook_enable().
 */
function simple_ldap_user_enable() {
  variable_set('password_inc', drupal_get_path('module', 'simple_ldap_user') . '/simple_ldap_user.password.inc');
}

/**
 * Implements hook_disable().
 */
function simple_ldap_user_disable() {
  $config = config('simple_ldap_user.settings');
  $password_inc = drupal_get_path('module', 'simple_ldap_user') . '/simple_ldap_user.password.inc';
  if (variable_get('password_inc') == $password_inc) {
    $config->clear('password_inc');
    $config->save();
  }
}

/**
 * Implements hook_uninstall().
 */
function simple_ldap_user_uninstall() {
  $config = config('simple_ldap_user.settings');
  $config->clear('simple_ldap_user_basedn');
  $config->clear('simple_ldap_user_scope');
  $config->clear('simple_ldap_user_objectclass');
  $config->clear('simple_ldap_user_attribute_name');
  $config->clear('simple_ldap_user_attribute_mail');
  $config->clear('simple_ldap_user_attribute_pass');
  $config->clear('simple_ldap_user_attribute_rdn');
  $config->clear('simple_ldap_user_password_hash');
  $config->clear('simple_ldap_user_filter');
  $config->clear('simple_ldap_user_source');
  $config->clear('simple_ldap_user_sync');
  $config->save();
}

/**
 * Implements hook_requirements().
 */
function simple_ldap_user_requirements($phase) {
  $requirements = array();
  // Ensure translations don't break during installation.
  $t = get_t();

  if ($phase == 'runtime') {
    $expected = drupal_get_path('module', 'simple_ldap_user') . '/simple_ldap_user.password.inc';
    $password_inc = variable_get('password_inc');
    $requirements['password_inc'] = array(
      'title' => 'password_inc',
      'value' => $password_inc,
      'severity' => $password_inc == $expected ? REQUIREMENT_OK : REQUIREMENT_ERROR,
      'description' => $t('Simple LDAP User requires overrides to some of the Drupal password hashing functions.') . ' ' . $t('If the password_inc variable is not set to the file provided by Simple LDAP User, LDAP authentication will not work.'),
    );
  }

  return $requirements;
}

/**
 * Update configuration variables.
 */
function simple_ldap_user_update_7100(&$sandbox) {

  // simple_ldap_user_objectclass should be an array.
  $objectclass = variable_get('simple_ldap_user_objectclass');
  if (!is_array($objectclass)) {
    variable_set('simple_ldap_user_objectclass', array($objectclass));
  }

  // simple_ldap_user_map has changed name and format.
  $attribute_map = variable_get('simple_ldap_user_map');
  if (!empty($attribute_map)) {
    return t('The "simple_ldap_user_map" variable has changed name and format.') . ' ' . t('The new variable name is "simple_ldap_user_attribute_map", and the format is outlined in simple_ldap_user/README.txt.') . ' ' . t('Please update settings.php accordingly.');
  }
}

/**
 * Remove the simple_ldap_user_delete variable.
 */
function simple_ldap_user_update_7101(&$sandbox) {
  variable_del('simple_ldap_user_delete');
}
